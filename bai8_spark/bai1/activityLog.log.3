13 Jul 2022 14:15:16,204 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Start fetching local blocks: 
13 Jul 2022 14:15:16,204 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,204 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,205 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,205 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Task 784 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@53a91fbe
13 Jul 2022 14:15:16,205 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,205 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Task 784 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@53a91fbe
13 Jul 2022 14:15:16,205 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Writing shuffle index file for mapId 784 with length 1
13 Jul 2022 14:15:16,206 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Shuffle index for mapId 784: [0]
13 Jul 2022 14:15:16,206 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Finished task 168.0 in stage 9.0 (TID 784). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,206 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,206 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,206 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,206 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,206 dispatcher-event-loop-1 - Starting task 169.0 in stage 9.0 (TID 785) (172.16.133.220, executor driver, partition 169, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,206 task-result-getter-0 - Finished task 168.0 in stage 9.0 (TID 784) in 5 ms on 172.16.133.220 (executor driver) (179/200)
13 Jul 2022 14:15:16,206 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Running task 169.0 in stage 9.0 (TID 785)
13 Jul 2022 14:15:16,206 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,206 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Convert map statuses for shuffle 5, mappers 0-1, partitions 169-170
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Start fetching local blocks: 
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,208 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,209 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,209 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Task 785 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@200b52e9
13 Jul 2022 14:15:16,209 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,209 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Task 785 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@200b52e9
13 Jul 2022 14:15:16,209 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Writing shuffle index file for mapId 785 with length 1
13 Jul 2022 14:15:16,209 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Shuffle index for mapId 785: [0]
13 Jul 2022 14:15:16,210 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - Finished task 169.0 in stage 9.0 (TID 785). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,210 Executor task launch worker for task 169.0 in stage 9.0 (TID 785) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,210 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,210 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,210 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,210 dispatcher-event-loop-1 - Starting task 171.0 in stage 9.0 (TID 786) (172.16.133.220, executor driver, partition 171, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,210 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Running task 171.0 in stage 9.0 (TID 786)
13 Jul 2022 14:15:16,210 task-result-getter-1 - Finished task 169.0 in stage 9.0 (TID 785) in 4 ms on 172.16.133.220 (executor driver) (180/200)
13 Jul 2022 14:15:16,210 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,210 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,211 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,211 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Convert map statuses for shuffle 5, mappers 0-1, partitions 171-172
13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Start fetching local blocks: 
13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,212 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Task 786 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@37a40933
13 Jul 2022 14:15:16,213 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,213 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Task 786 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@37a40933
13 Jul 2022 14:15:16,213 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Writing shuffle index file for mapId 786 with length 1
13 Jul 2022 14:15:16,213 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Shuffle index for mapId 786: [0]
13 Jul 2022 14:15:16,213 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - Finished task 171.0 in stage 9.0 (TID 786). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,213 Executor task launch worker for task 171.0 in stage 9.0 (TID 786) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,214 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,214 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,214 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,214 dispatcher-event-loop-1 - Starting task 172.0 in stage 9.0 (TID 787) (172.16.133.220, executor driver, partition 172, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,214 task-result-getter-2 - Finished task 171.0 in stage 9.0 (TID 786) in 4 ms on 172.16.133.220 (executor driver) (181/200)
13 Jul 2022 14:15:16,214 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Running task 172.0 in stage 9.0 (TID 787)
13 Jul 2022 14:15:16,214 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,214 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Convert map statuses for shuffle 5, mappers 0-1, partitions 172-173
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Start fetching local blocks: 
13 Jul 2022 14:15:16,215 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,216 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,216 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,216 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Task 787 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@72ac9596
13 Jul 2022 14:15:16,217 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,217 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Task 787 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@72ac9596
13 Jul 2022 14:15:16,217 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Writing shuffle index file for mapId 787 with length 1
13 Jul 2022 14:15:16,217 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Shuffle index for mapId 787: [0]
13 Jul 2022 14:15:16,217 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - Finished task 172.0 in stage 9.0 (TID 787). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,217 Executor task launch worker for task 172.0 in stage 9.0 (TID 787) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,217 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,217 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,217 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,218 dispatcher-event-loop-1 - Starting task 173.0 in stage 9.0 (TID 788) (172.16.133.220, executor driver, partition 173, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,218 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Running task 173.0 in stage 9.0 (TID 788)
13 Jul 2022 14:15:16,218 task-result-getter-3 - Finished task 172.0 in stage 9.0 (TID 787) in 4 ms on 172.16.133.220 (executor driver) (182/200)
13 Jul 2022 14:15:16,218 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,218 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Convert map statuses for shuffle 5, mappers 0-1, partitions 173-174
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Start fetching local blocks: 
13 Jul 2022 14:15:16,219 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,220 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,220 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,220 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Task 788 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@23ec750a
13 Jul 2022 14:15:16,220 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,220 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Task 788 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@23ec750a
13 Jul 2022 14:15:16,220 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Writing shuffle index file for mapId 788 with length 1
13 Jul 2022 14:15:16,221 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Shuffle index for mapId 788: [0]
13 Jul 2022 14:15:16,221 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - Finished task 173.0 in stage 9.0 (TID 788). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,221 Executor task launch worker for task 173.0 in stage 9.0 (TID 788) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,221 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,221 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,221 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,221 dispatcher-event-loop-1 - Starting task 174.0 in stage 9.0 (TID 789) (172.16.133.220, executor driver, partition 174, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,221 task-result-getter-0 - Finished task 173.0 in stage 9.0 (TID 788) in 4 ms on 172.16.133.220 (executor driver) (183/200)
13 Jul 2022 14:15:16,221 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Running task 174.0 in stage 9.0 (TID 789)
13 Jul 2022 14:15:16,221 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,221 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Convert map statuses for shuffle 5, mappers 0-1, partitions 174-175
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Start fetching local blocks: 
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,223 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,224 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,224 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Task 789 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@54dc35aa
13 Jul 2022 14:15:16,224 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,224 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Task 789 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@54dc35aa
13 Jul 2022 14:15:16,224 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Writing shuffle index file for mapId 789 with length 1
13 Jul 2022 14:15:16,224 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Shuffle index for mapId 789: [0]
13 Jul 2022 14:15:16,225 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - Finished task 174.0 in stage 9.0 (TID 789). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,225 Executor task launch worker for task 174.0 in stage 9.0 (TID 789) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,225 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,225 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,225 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,225 dispatcher-event-loop-1 - Starting task 175.0 in stage 9.0 (TID 790) (172.16.133.220, executor driver, partition 175, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,225 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Running task 175.0 in stage 9.0 (TID 790)
13 Jul 2022 14:15:16,225 task-result-getter-1 - Finished task 174.0 in stage 9.0 (TID 789) in 4 ms on 172.16.133.220 (executor driver) (184/200)
13 Jul 2022 14:15:16,225 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,225 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Convert map statuses for shuffle 5, mappers 0-1, partitions 175-176
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Start fetching local blocks: 
13 Jul 2022 14:15:16,226 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,227 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,227 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,227 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Task 790 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@c6a5b77
13 Jul 2022 14:15:16,228 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,228 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Task 790 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@c6a5b77
13 Jul 2022 14:15:16,228 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Writing shuffle index file for mapId 790 with length 1
13 Jul 2022 14:15:16,228 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Shuffle index for mapId 790: [0]
13 Jul 2022 14:15:16,228 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - Finished task 175.0 in stage 9.0 (TID 790). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,228 Executor task launch worker for task 175.0 in stage 9.0 (TID 790) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,228 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,228 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,228 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,228 dispatcher-event-loop-1 - Starting task 176.0 in stage 9.0 (TID 791) (172.16.133.220, executor driver, partition 176, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,229 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Running task 176.0 in stage 9.0 (TID 791)
13 Jul 2022 14:15:16,229 task-result-getter-2 - Finished task 175.0 in stage 9.0 (TID 790) in 4 ms on 172.16.133.220 (executor driver) (185/200)
13 Jul 2022 14:15:16,229 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,229 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Convert map statuses for shuffle 5, mappers 0-1, partitions 176-177
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Start fetching local blocks: 
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,230 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,231 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,231 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Task 791 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@654979dd
13 Jul 2022 14:15:16,231 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,231 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Task 791 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@654979dd
13 Jul 2022 14:15:16,231 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Writing shuffle index file for mapId 791 with length 1
13 Jul 2022 14:15:16,232 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Shuffle index for mapId 791: [0]
13 Jul 2022 14:15:16,232 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - Finished task 176.0 in stage 9.0 (TID 791). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,232 Executor task launch worker for task 176.0 in stage 9.0 (TID 791) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,232 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,232 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,232 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,232 dispatcher-event-loop-1 - Starting task 179.0 in stage 9.0 (TID 792) (172.16.133.220, executor driver, partition 179, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,232 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Running task 179.0 in stage 9.0 (TID 792)
13 Jul 2022 14:15:16,232 task-result-getter-3 - Finished task 176.0 in stage 9.0 (TID 791) in 4 ms on 172.16.133.220 (executor driver) (186/200)
13 Jul 2022 14:15:16,232 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,232 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Convert map statuses for shuffle 5, mappers 0-1, partitions 179-180
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Start fetching local blocks: 
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,234 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,235 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,235 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Task 792 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6a8468e9
13 Jul 2022 14:15:16,235 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,235 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Task 792 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6a8468e9
13 Jul 2022 14:15:16,235 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Writing shuffle index file for mapId 792 with length 1
13 Jul 2022 14:15:16,235 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Shuffle index for mapId 792: [0]
13 Jul 2022 14:15:16,236 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - Finished task 179.0 in stage 9.0 (TID 792). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,236 Executor task launch worker for task 179.0 in stage 9.0 (TID 792) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,236 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,236 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,236 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,236 dispatcher-event-loop-1 - Starting task 180.0 in stage 9.0 (TID 793) (172.16.133.220, executor driver, partition 180, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,236 task-result-getter-0 - Finished task 179.0 in stage 9.0 (TID 792) in 4 ms on 172.16.133.220 (executor driver) (187/200)
13 Jul 2022 14:15:16,236 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Running task 180.0 in stage 9.0 (TID 793)
13 Jul 2022 14:15:16,236 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,236 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Convert map statuses for shuffle 5, mappers 0-1, partitions 180-181
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Start fetching local blocks: 
13 Jul 2022 14:15:16,237 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,238 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,238 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,238 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Task 793 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@54a15b8d
13 Jul 2022 14:15:16,239 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,239 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Task 793 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@54a15b8d
13 Jul 2022 14:15:16,239 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Writing shuffle index file for mapId 793 with length 1
13 Jul 2022 14:15:16,239 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Shuffle index for mapId 793: [0]
13 Jul 2022 14:15:16,239 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - Finished task 180.0 in stage 9.0 (TID 793). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,239 Executor task launch worker for task 180.0 in stage 9.0 (TID 793) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,239 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,239 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,239 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,240 dispatcher-event-loop-1 - Starting task 184.0 in stage 9.0 (TID 794) (172.16.133.220, executor driver, partition 184, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,240 task-result-getter-1 - Finished task 180.0 in stage 9.0 (TID 793) in 4 ms on 172.16.133.220 (executor driver) (188/200)
13 Jul 2022 14:15:16,240 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Running task 184.0 in stage 9.0 (TID 794)
13 Jul 2022 14:15:16,240 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,240 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Convert map statuses for shuffle 5, mappers 0-1, partitions 184-185
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Start fetching local blocks: 
13 Jul 2022 14:15:16,241 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,242 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,242 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,242 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Task 794 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3eb51700
13 Jul 2022 14:15:16,242 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,242 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Task 794 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3eb51700
13 Jul 2022 14:15:16,242 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Writing shuffle index file for mapId 794 with length 1
13 Jul 2022 14:15:16,243 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Shuffle index for mapId 794: [0]
13 Jul 2022 14:15:16,243 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - Finished task 184.0 in stage 9.0 (TID 794). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,243 Executor task launch worker for task 184.0 in stage 9.0 (TID 794) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,243 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,243 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,243 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,243 dispatcher-event-loop-1 - Starting task 185.0 in stage 9.0 (TID 795) (172.16.133.220, executor driver, partition 185, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,243 task-result-getter-2 - Finished task 184.0 in stage 9.0 (TID 794) in 4 ms on 172.16.133.220 (executor driver) (189/200)
13 Jul 2022 14:15:16,243 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Running task 185.0 in stage 9.0 (TID 795)
13 Jul 2022 14:15:16,243 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,244 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Convert map statuses for shuffle 5, mappers 0-1, partitions 185-186
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Start fetching local blocks: 
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,245 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,246 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,246 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Task 795 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@657f3e1e
13 Jul 2022 14:15:16,246 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,246 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Task 795 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@657f3e1e
13 Jul 2022 14:15:16,246 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Writing shuffle index file for mapId 795 with length 1
13 Jul 2022 14:15:16,246 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Shuffle index for mapId 795: [0]
13 Jul 2022 14:15:16,247 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - Finished task 185.0 in stage 9.0 (TID 795). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,247 Executor task launch worker for task 185.0 in stage 9.0 (TID 795) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,247 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,247 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,247 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,247 dispatcher-event-loop-1 - Starting task 186.0 in stage 9.0 (TID 796) (172.16.133.220, executor driver, partition 186, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,247 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Running task 186.0 in stage 9.0 (TID 796)
13 Jul 2022 14:15:16,247 task-result-getter-3 - Finished task 185.0 in stage 9.0 (TID 795) in 4 ms on 172.16.133.220 (executor driver) (190/200)
13 Jul 2022 14:15:16,247 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,247 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,248 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,248 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Convert map statuses for shuffle 5, mappers 0-1, partitions 186-187
13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Start fetching local blocks: 
13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,249 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Task 796 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@1fe497ea
13 Jul 2022 14:15:16,250 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,250 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Task 796 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@1fe497ea
13 Jul 2022 14:15:16,250 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Writing shuffle index file for mapId 796 with length 1
13 Jul 2022 14:15:16,250 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Shuffle index for mapId 796: [0]
13 Jul 2022 14:15:16,250 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - Finished task 186.0 in stage 9.0 (TID 796). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,250 Executor task launch worker for task 186.0 in stage 9.0 (TID 796) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,251 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,251 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,251 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,251 dispatcher-event-loop-1 - Starting task 187.0 in stage 9.0 (TID 797) (172.16.133.220, executor driver, partition 187, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,251 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Running task 187.0 in stage 9.0 (TID 797)
13 Jul 2022 14:15:16,251 task-result-getter-0 - Finished task 186.0 in stage 9.0 (TID 796) in 4 ms on 172.16.133.220 (executor driver) (191/200)
13 Jul 2022 14:15:16,251 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,251 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Convert map statuses for shuffle 5, mappers 0-1, partitions 187-188
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Start fetching local blocks: 
13 Jul 2022 14:15:16,252 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,253 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,253 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,253 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Task 797 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@32bc7541
13 Jul 2022 14:15:16,253 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,254 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Task 797 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@32bc7541
13 Jul 2022 14:15:16,254 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Writing shuffle index file for mapId 797 with length 1
13 Jul 2022 14:15:16,254 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Shuffle index for mapId 797: [0]
13 Jul 2022 14:15:16,254 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - Finished task 187.0 in stage 9.0 (TID 797). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,254 Executor task launch worker for task 187.0 in stage 9.0 (TID 797) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,254 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,254 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,254 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,254 dispatcher-event-loop-1 - Starting task 188.0 in stage 9.0 (TID 798) (172.16.133.220, executor driver, partition 188, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,255 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Running task 188.0 in stage 9.0 (TID 798)
13 Jul 2022 14:15:16,255 task-result-getter-1 - Finished task 187.0 in stage 9.0 (TID 797) in 4 ms on 172.16.133.220 (executor driver) (192/200)
13 Jul 2022 14:15:16,255 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,255 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Convert map statuses for shuffle 5, mappers 0-1, partitions 188-189
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Start fetching local blocks: 
13 Jul 2022 14:15:16,256 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,257 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,257 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,257 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Task 798 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@52097e11
13 Jul 2022 14:15:16,257 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,257 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Task 798 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@52097e11
13 Jul 2022 14:15:16,257 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Writing shuffle index file for mapId 798 with length 1
13 Jul 2022 14:15:16,259 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Shuffle index for mapId 798: [0]
13 Jul 2022 14:15:16,259 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - Finished task 188.0 in stage 9.0 (TID 798). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,260 Executor task launch worker for task 188.0 in stage 9.0 (TID 798) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,260 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,260 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,260 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,260 dispatcher-event-loop-1 - Starting task 191.0 in stage 9.0 (TID 799) (172.16.133.220, executor driver, partition 191, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,260 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Running task 191.0 in stage 9.0 (TID 799)
13 Jul 2022 14:15:16,260 task-result-getter-2 - Finished task 188.0 in stage 9.0 (TID 798) in 6 ms on 172.16.133.220 (executor driver) (193/200)
13 Jul 2022 14:15:16,260 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,260 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Convert map statuses for shuffle 5, mappers 0-1, partitions 191-192
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Start fetching local blocks: 
13 Jul 2022 14:15:16,261 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,262 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,262 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,262 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Task 799 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2065846a
13 Jul 2022 14:15:16,263 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,263 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Task 799 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2065846a
13 Jul 2022 14:15:16,263 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Writing shuffle index file for mapId 799 with length 1
13 Jul 2022 14:15:16,263 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Shuffle index for mapId 799: [0]
13 Jul 2022 14:15:16,263 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - Finished task 191.0 in stage 9.0 (TID 799). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,263 Executor task launch worker for task 191.0 in stage 9.0 (TID 799) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,264 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,264 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,264 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,264 dispatcher-event-loop-1 - Starting task 192.0 in stage 9.0 (TID 800) (172.16.133.220, executor driver, partition 192, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,264 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Running task 192.0 in stage 9.0 (TID 800)
13 Jul 2022 14:15:16,264 task-result-getter-3 - Finished task 191.0 in stage 9.0 (TID 799) in 4 ms on 172.16.133.220 (executor driver) (194/200)
13 Jul 2022 14:15:16,264 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,264 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Convert map statuses for shuffle 5, mappers 0-1, partitions 192-193
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Start fetching local blocks: 
13 Jul 2022 14:15:16,265 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,266 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,266 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,266 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Task 800 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@61c5cc8e
13 Jul 2022 14:15:16,267 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,267 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Task 800 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@61c5cc8e
13 Jul 2022 14:15:16,267 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Writing shuffle index file for mapId 800 with length 1
13 Jul 2022 14:15:16,267 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Shuffle index for mapId 800: [0]
13 Jul 2022 14:15:16,267 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - Finished task 192.0 in stage 9.0 (TID 800). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,267 Executor task launch worker for task 192.0 in stage 9.0 (TID 800) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,267 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,267 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,267 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,267 dispatcher-event-loop-1 - Starting task 195.0 in stage 9.0 (TID 801) (172.16.133.220, executor driver, partition 195, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,268 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Running task 195.0 in stage 9.0 (TID 801)
13 Jul 2022 14:15:16,268 task-result-getter-0 - Finished task 192.0 in stage 9.0 (TID 800) in 4 ms on 172.16.133.220 (executor driver) (195/200)
13 Jul 2022 14:15:16,268 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,268 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Convert map statuses for shuffle 5, mappers 0-1, partitions 195-196
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Start fetching local blocks: 
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,269 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,270 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,270 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Task 801 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@439c25c8
13 Jul 2022 14:15:16,270 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,270 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Task 801 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@439c25c8
13 Jul 2022 14:15:16,270 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Writing shuffle index file for mapId 801 with length 1
13 Jul 2022 14:15:16,271 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Shuffle index for mapId 801: [0]
13 Jul 2022 14:15:16,271 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - Finished task 195.0 in stage 9.0 (TID 801). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,271 Executor task launch worker for task 195.0 in stage 9.0 (TID 801) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,271 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,271 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,271 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,271 dispatcher-event-loop-1 - Starting task 196.0 in stage 9.0 (TID 802) (172.16.133.220, executor driver, partition 196, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,271 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Running task 196.0 in stage 9.0 (TID 802)
13 Jul 2022 14:15:16,271 task-result-getter-1 - Finished task 195.0 in stage 9.0 (TID 801) in 4 ms on 172.16.133.220 (executor driver) (196/200)
13 Jul 2022 14:15:16,271 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,272 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Convert map statuses for shuffle 5, mappers 0-1, partitions 196-197
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Start fetching local blocks: 
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,273 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,274 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,274 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Task 802 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@56254dfa
13 Jul 2022 14:15:16,274 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,274 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Task 802 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@56254dfa
13 Jul 2022 14:15:16,274 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Writing shuffle index file for mapId 802 with length 1
13 Jul 2022 14:15:16,275 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Shuffle index for mapId 802: [0]
13 Jul 2022 14:15:16,275 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - Finished task 196.0 in stage 9.0 (TID 802). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,275 Executor task launch worker for task 196.0 in stage 9.0 (TID 802) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,275 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,275 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,275 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,275 dispatcher-event-loop-1 - Starting task 197.0 in stage 9.0 (TID 803) (172.16.133.220, executor driver, partition 197, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,275 task-result-getter-2 - Finished task 196.0 in stage 9.0 (TID 802) in 4 ms on 172.16.133.220 (executor driver) (197/200)
13 Jul 2022 14:15:16,275 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Running task 197.0 in stage 9.0 (TID 803)
13 Jul 2022 14:15:16,275 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,275 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Convert map statuses for shuffle 5, mappers 0-1, partitions 197-198
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Start fetching local blocks: 
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,277 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,278 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,278 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Task 803 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@38868bb6
13 Jul 2022 14:15:16,278 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,278 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Task 803 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@38868bb6
13 Jul 2022 14:15:16,278 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Writing shuffle index file for mapId 803 with length 1
13 Jul 2022 14:15:16,278 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Shuffle index for mapId 803: [0]
13 Jul 2022 14:15:16,279 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - Finished task 197.0 in stage 9.0 (TID 803). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,279 Executor task launch worker for task 197.0 in stage 9.0 (TID 803) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,279 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,279 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,279 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,279 dispatcher-event-loop-1 - Starting task 198.0 in stage 9.0 (TID 804) (172.16.133.220, executor driver, partition 198, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,279 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Running task 198.0 in stage 9.0 (TID 804)
13 Jul 2022 14:15:16,279 task-result-getter-3 - Finished task 197.0 in stage 9.0 (TID 803) in 4 ms on 172.16.133.220 (executor driver) (198/200)
13 Jul 2022 14:15:16,279 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,279 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Convert map statuses for shuffle 5, mappers 0-1, partitions 198-199
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Start fetching local blocks: 
13 Jul 2022 14:15:16,280 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,281 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,281 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,281 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Task 804 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7988dde7
13 Jul 2022 14:15:16,282 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,282 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Task 804 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7988dde7
13 Jul 2022 14:15:16,282 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Writing shuffle index file for mapId 804 with length 1
13 Jul 2022 14:15:16,282 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Shuffle index for mapId 804: [0]
13 Jul 2022 14:15:16,282 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - Finished task 198.0 in stage 9.0 (TID 804). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,282 Executor task launch worker for task 198.0 in stage 9.0 (TID 804) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,282 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,282 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,282 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,283 dispatcher-event-loop-1 - Starting task 199.0 in stage 9.0 (TID 805) (172.16.133.220, executor driver, partition 199, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,283 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Running task 199.0 in stage 9.0 (TID 805)
13 Jul 2022 14:15:16,283 task-result-getter-0 - Finished task 198.0 in stage 9.0 (TID 804) in 4 ms on 172.16.133.220 (executor driver) (199/200)
13 Jul 2022 14:15:16,283 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,283 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Convert map statuses for shuffle 5, mappers 0-1, partitions 199-200
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Start fetching local blocks: 
13 Jul 2022 14:15:16,284 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,285 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,285 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,285 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Task 805 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@f2101fc
13 Jul 2022 14:15:16,285 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,285 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Task 805 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@f2101fc
13 Jul 2022 14:15:16,286 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Writing shuffle index file for mapId 805 with length 1
13 Jul 2022 14:15:16,286 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Shuffle index for mapId 805: [0]
13 Jul 2022 14:15:16,286 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - Finished task 199.0 in stage 9.0 (TID 805). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,286 Executor task launch worker for task 199.0 in stage 9.0 (TID 805) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,286 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,286 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,286 dispatcher-event-loop-1 - No tasks for locality level NO_PREF, so moving to locality level ANY
13 Jul 2022 14:15:16,286 task-result-getter-1 - Finished task 199.0 in stage 9.0 (TID 805) in 3 ms on 172.16.133.220 (executor driver) (200/200)
13 Jul 2022 14:15:16,287 task-result-getter-1 - Removed TaskSet 9.0, whose tasks have all completed, from pool 
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - ShuffleMapStage 9 (save at bai1.java:15) finished in 0.967 s
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - looking for newly runnable stages
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - running: Set()
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - waiting: Set(ResultStage 10)
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - failed: Set()
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - Increasing epoch to 7
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - submitStage(ResultStage 10 (name=save at bai1.java:15;jobs=3))
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - missing: List()
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - Submitting ResultStage 10 (ShuffledRowRDD[33] at save at bai1.java:15), which has no missing parents
13 Jul 2022 14:15:16,287 dag-scheduler-event-loop - submitMissingTasks(ResultStage 10)
13 Jul 2022 14:15:16,313 dag-scheduler-event-loop - Block broadcast_13 stored as values in memory (estimated size 168.9 KiB, free 911.4 MiB)
13 Jul 2022 14:15:16,313 dag-scheduler-event-loop - Put block broadcast_13 locally took 0 ms
13 Jul 2022 14:15:16,313 dag-scheduler-event-loop - Putting block broadcast_13 without replication took 0 ms
13 Jul 2022 14:15:16,314 dag-scheduler-event-loop - Block broadcast_13_piece0 stored as bytes in memory (estimated size 59.8 KiB, free 911.3 MiB)
13 Jul 2022 14:15:16,314 dispatcher-BlockManagerMaster - Updating block info on master broadcast_13_piece0 for BlockManagerId(driver, 172.16.133.220, 53286, None)
13 Jul 2022 14:15:16,315 dispatcher-BlockManagerMaster - Added broadcast_13_piece0 in memory on 172.16.133.220:53286 (size: 59.8 KiB, free: 912.2 MiB)
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Updated info of block broadcast_13_piece0
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Told master about block broadcast_13_piece0
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Put block broadcast_13_piece0 locally took 0 ms
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Putting block broadcast_13_piece0 without replication took 0 ms
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Created broadcast 13 from broadcast at DAGScheduler.scala:1383
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Submitting 1 missing tasks from ResultStage 10 (ShuffledRowRDD[33] at save at bai1.java:15) (first 15 tasks are for partitions Vector(0))
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Adding task set 10.0 with 1 tasks resource profile 0
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Epoch for TaskSet 10.0: 7
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Adding pending tasks took 0 ms
13 Jul 2022 14:15:16,315 dag-scheduler-event-loop - Valid locality levels for TaskSet 10.0: NODE_LOCAL, ANY
13 Jul 2022 14:15:16,315 dispatcher-event-loop-0 - parentName: , name: TaskSet_10.0, runningTasks: 0
13 Jul 2022 14:15:16,316 dispatcher-event-loop-0 - Starting task 0.0 in stage 10.0 (TID 806) (172.16.133.220, executor driver, partition 0, NODE_LOCAL, 4453 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,316 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Running task 0.0 in stage 10.0 (TID 806)
13 Jul 2022 14:15:16,316 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - stageTCMP: (10, 0) -> 1
13 Jul 2022 14:15:16,316 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local block broadcast_13
13 Jul 2022 14:15:16,316 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Level for block broadcast_13 is StorageLevel(disk, memory, deserialized, 1 replicas)
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Fetching outputs for shuffle 6
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Convert map statuses for shuffle 6, mappers 0-200, partitions 0-1
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting 92 (15.0 KiB) non-empty blocks including 92 (15.0 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Start fetching local blocks: (shuffle_6_606_0,1), (shuffle_6_607_0,5), (shuffle_6_608_0,7), (shuffle_6_609_0,9), (shuffle_6_610_0,15), (shuffle_6_611_0,17), (shuffle_6_612_0,23), (shuffle_6_613_0,24), (shuffle_6_614_0,25), (shuffle_6_615_0,26), (shuffle_6_616_0,27), (shuffle_6_617_0,28), (shuffle_6_618_0,30), (shuffle_6_619_0,31), (shuffle_6_620_0,32), (shuffle_6_621_0,33), (shuffle_6_622_0,38), (shuffle_6_623_0,39), (shuffle_6_624_0,41), (shuffle_6_625_0,42), (shuffle_6_626_0,45), (shuffle_6_627_0,48), (shuffle_6_628_0,55), (shuffle_6_629_0,57), (shuffle_6_630_0,61), (shuffle_6_631_0,62), (shuffle_6_632_0,64), (shuffle_6_633_0,65), (shuffle_6_634_0,66), (shuffle_6_635_0,70), (shuffle_6_636_0,73), (shuffle_6_637_0,75), (shuffle_6_638_0,76), (shuffle_6_639_0,80), (shuffle_6_640_0,81), (shuffle_6_641_0,82), (shuffle_6_642_0,84), (shuffle_6_643_0,85), (shuffle_6_644_0,86), (shuffle_6_645_0,88), (shuffle_6_646_0,90), (shuffle_6_647_0,91), (shuffle_6_648_0,93), (shuffle_6_649_0,94), (shuffle_6_650_0,96), (shuffle_6_651_0,99), (shuffle_6_652_0,100), (shuffle_6_653_0,102), (shuffle_6_654_0,103), (shuffle_6_655_0,104), (shuffle_6_656_0,105), (shuffle_6_657_0,106), (shuffle_6_658_0,108), (shuffle_6_659_0,110), (shuffle_6_660_0,113), (shuffle_6_661_0,114), (shuffle_6_662_0,116), (shuffle_6_663_0,117), (shuffle_6_664_0,120), (shuffle_6_665_0,121), (shuffle_6_666_0,122), (shuffle_6_667_0,124), (shuffle_6_668_0,125), (shuffle_6_669_0,129), (shuffle_6_670_0,131), (shuffle_6_671_0,132), (shuffle_6_672_0,133), (shuffle_6_673_0,137), (shuffle_6_674_0,139), (shuffle_6_675_0,140), (shuffle_6_676_0,141), (shuffle_6_677_0,142), (shuffle_6_678_0,145), (shuffle_6_679_0,146), (shuffle_6_680_0,148), (shuffle_6_681_0,149), (shuffle_6_682_0,153), (shuffle_6_683_0,156), (shuffle_6_684_0,160), (shuffle_6_685_0,162), (shuffle_6_686_0,163), (shuffle_6_687_0,165), (shuffle_6_688_0,170), (shuffle_6_689_0,177), (shuffle_6_690_0,178), (shuffle_6_691_0,181), (shuffle_6_692_0,182), (shuffle_6_693_0,183), (shuffle_6_694_0,189), (shuffle_6_695_0,190), (shuffle_6_696_0,193), (shuffle_6_697_0,194)
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_606_0
13 Jul 2022 14:15:16,327 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_607_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_608_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_609_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_610_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_611_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_612_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_613_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_614_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_615_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_616_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_617_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_618_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_619_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_620_0
13 Jul 2022 14:15:16,328 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_621_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_622_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_623_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_624_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_625_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_626_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_627_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_628_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_629_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_630_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_631_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_632_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_633_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_634_0
13 Jul 2022 14:15:16,329 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_635_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_636_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_637_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_638_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_639_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_640_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_641_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_642_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_643_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_644_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_645_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_646_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_647_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_648_0
13 Jul 2022 14:15:16,330 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_649_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_650_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_651_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_652_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_653_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_654_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_655_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_656_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_657_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_658_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_659_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_660_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_661_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_662_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_663_0
13 Jul 2022 14:15:16,331 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_664_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_665_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_666_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_667_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_668_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_669_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_670_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_671_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_672_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_673_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_674_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_675_0
13 Jul 2022 14:15:16,332 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_676_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_677_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_678_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_679_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_680_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_681_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_682_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_683_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_684_0
13 Jul 2022 14:15:16,333 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_685_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_686_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_687_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_688_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_689_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_690_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_691_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_692_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_693_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_694_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_695_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_696_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Getting local shuffle block shuffle_6_697_0
13 Jul 2022 14:15:16,334 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Got local blocks in 7 ms
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Instantiating committer FileOutputCommitter{PathOutputCommitter{context=TaskAttemptContextImpl{JobContextImpl{jobId=job_202207131415151492295008108765596_0010}; taskId=attempt_202207131415151492295008108765596_0010_m_000000_806, status=''}; org.apache.parquet.hadoop.ParquetOutputCommitter@6ef9a700}; outputPath=null, workPath=null, algorithmVersion=0, skipCleanup=false, ignoreCleanupFailures=false} with output path file:/Users/buiminhchi/GHTK/masterDev/bai8_spark/bai1/user/chibm/button_count_by_user_id_device_model/small and job context TaskAttemptContextImpl{JobContextImpl{jobId=job_202207131415151492295008108765596_0010}; taskId=attempt_202207131415151492295008108765596_0010_m_000000_806, status=''}
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - File Output Committer Algorithm version is 1
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Using user defined output committer class org.apache.parquet.hadoop.ParquetOutputCommitter
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Instantiating committer FileOutputCommitter{PathOutputCommitter{context=TaskAttemptContextImpl{JobContextImpl{jobId=job_202207131415151492295008108765596_0010}; taskId=attempt_202207131415151492295008108765596_0010_m_000000_806, status=''}; org.apache.parquet.hadoop.ParquetOutputCommitter@27d9999d}; outputPath=null, workPath=null, algorithmVersion=0, skipCleanup=false, ignoreCleanupFailures=false} with output path file:/Users/buiminhchi/GHTK/masterDev/bai8_spark/bai1/user/chibm/button_count_by_user_id_device_model/small and job context TaskAttemptContextImpl{JobContextImpl{jobId=job_202207131415151492295008108765596_0010}; taskId=attempt_202207131415151492295008108765596_0010_m_000000_806, status=''}
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - File Output Committer Algorithm version is 1
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - FileOutputCommitter skip cleanup _temporary folders under output directory:false, ignore cleanup failures: false
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Using output committer class org.apache.parquet.hadoop.ParquetOutputCommitter
13 Jul 2022 14:15:16,335 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Compression: SNAPPY
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Compression: SNAPPY
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Parquet block size to 134217728
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Parquet page size to 1048576
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Parquet dictionary page size to 1048576
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Dictionary is on
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Validation is off
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Writer version is: PARQUET_1_0
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Maximum row group padding size is 8388608 bytes
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Page size checking is: estimated
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Min row count for page size check is: 100
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Max row count for page size check is: 10000
13 Jul 2022 14:15:16,336 Executor task launch worker for task 0.0 in stage 10.0 (TID 806) - Initialized Parquet WriteSupport with Catalyst schema:
{
  "type" : "struct",
  "fields" : [ {
    "name" : "user_id_device_model",
    "type" : "string",
    "nullable" : true,
    "metadata" : { }
  }, {
    "name" : "button_id",
    "type" : "string",
    "nullable" : true,
    "metadata" : { }
  }, {
    "name" : "count",
    "type" : "long",
    "nullable" : false,
    "metadata" : { }
  } ]
}
and corresponding Parquet message type:
message spark_schema {
  optional binary user_id_device_model (UTF8);
  optional binary button_id (UTF8);
  required int64 count;
}

       
