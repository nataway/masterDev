13 Jul 2022 14:15:16,093 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,093 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Task 759 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3e252e14
13 Jul 2022 14:15:16,093 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Writing shuffle index file for mapId 759 with length 1
13 Jul 2022 14:15:16,094 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Shuffle index for mapId 759: [0]
13 Jul 2022 14:15:16,094 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Finished task 119.0 in stage 9.0 (TID 759). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,094 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,094 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,094 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,094 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,094 dispatcher-event-loop-1 - Starting task 123.0 in stage 9.0 (TID 760) (172.16.133.220, executor driver, partition 123, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,094 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Running task 123.0 in stage 9.0 (TID 760)
13 Jul 2022 14:15:16,094 task-result-getter-3 - Finished task 119.0 in stage 9.0 (TID 759) in 5 ms on 172.16.133.220 (executor driver) (154/200)
13 Jul 2022 14:15:16,094 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,094 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Convert map statuses for shuffle 5, mappers 0-1, partitions 123-124
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Start fetching local blocks: 
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,096 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,097 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,097 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Task 760 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6b5e22ce
13 Jul 2022 14:15:16,097 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,097 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Task 760 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6b5e22ce
13 Jul 2022 14:15:16,097 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Writing shuffle index file for mapId 760 with length 1
13 Jul 2022 14:15:16,098 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Shuffle index for mapId 760: [0]
13 Jul 2022 14:15:16,098 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - Finished task 123.0 in stage 9.0 (TID 760). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,098 Executor task launch worker for task 123.0 in stage 9.0 (TID 760) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,098 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,098 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,098 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,098 dispatcher-event-loop-1 - Starting task 126.0 in stage 9.0 (TID 761) (172.16.133.220, executor driver, partition 126, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,098 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Running task 126.0 in stage 9.0 (TID 761)
13 Jul 2022 14:15:16,098 task-result-getter-0 - Finished task 123.0 in stage 9.0 (TID 760) in 4 ms on 172.16.133.220 (executor driver) (155/200)
13 Jul 2022 14:15:16,098 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,098 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Convert map statuses for shuffle 5, mappers 0-1, partitions 126-127
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Start fetching local blocks: 
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,100 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,101 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Task 761 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7d1a642
13 Jul 2022 14:15:16,101 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,101 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Task 761 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7d1a642
13 Jul 2022 14:15:16,101 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Writing shuffle index file for mapId 761 with length 1
13 Jul 2022 14:15:16,101 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Shuffle index for mapId 761: [0]
13 Jul 2022 14:15:16,102 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - Finished task 126.0 in stage 9.0 (TID 761). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,102 Executor task launch worker for task 126.0 in stage 9.0 (TID 761) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,102 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,102 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,102 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,102 dispatcher-event-loop-1 - Starting task 127.0 in stage 9.0 (TID 762) (172.16.133.220, executor driver, partition 127, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,102 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Running task 127.0 in stage 9.0 (TID 762)
13 Jul 2022 14:15:16,102 task-result-getter-1 - Finished task 126.0 in stage 9.0 (TID 761) in 4 ms on 172.16.133.220 (executor driver) (156/200)
13 Jul 2022 14:15:16,102 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,102 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,103 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,103 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Convert map statuses for shuffle 5, mappers 0-1, partitions 127-128
13 Jul 2022 14:15:16,103 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Start fetching local blocks: 
13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,104 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Task 762 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@1f0404cc
13 Jul 2022 14:15:16,105 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,105 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Task 762 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@1f0404cc
13 Jul 2022 14:15:16,105 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Writing shuffle index file for mapId 762 with length 1
13 Jul 2022 14:15:16,105 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Shuffle index for mapId 762: [0]
13 Jul 2022 14:15:16,106 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - Finished task 127.0 in stage 9.0 (TID 762). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,106 Executor task launch worker for task 127.0 in stage 9.0 (TID 762) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,106 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,106 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,106 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,106 dispatcher-event-loop-1 - Starting task 128.0 in stage 9.0 (TID 763) (172.16.133.220, executor driver, partition 128, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,106 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Running task 128.0 in stage 9.0 (TID 763)
13 Jul 2022 14:15:16,106 task-result-getter-2 - Finished task 127.0 in stage 9.0 (TID 762) in 4 ms on 172.16.133.220 (executor driver) (157/200)
13 Jul 2022 14:15:16,106 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,106 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,107 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,107 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Convert map statuses for shuffle 5, mappers 0-1, partitions 128-129
13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Start fetching local blocks: 
13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,108 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,109 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Task 763 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@480f308c
13 Jul 2022 14:15:16,109 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,109 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Task 763 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@480f308c
13 Jul 2022 14:15:16,109 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Writing shuffle index file for mapId 763 with length 1
13 Jul 2022 14:15:16,109 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Shuffle index for mapId 763: [0]
13 Jul 2022 14:15:16,110 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - Finished task 128.0 in stage 9.0 (TID 763). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,110 Executor task launch worker for task 128.0 in stage 9.0 (TID 763) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,110 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,110 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,110 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,110 dispatcher-event-loop-1 - Starting task 130.0 in stage 9.0 (TID 764) (172.16.133.220, executor driver, partition 130, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,110 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Running task 130.0 in stage 9.0 (TID 764)
13 Jul 2022 14:15:16,110 task-result-getter-3 - Finished task 128.0 in stage 9.0 (TID 763) in 4 ms on 172.16.133.220 (executor driver) (158/200)
13 Jul 2022 14:15:16,110 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,110 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Convert map statuses for shuffle 5, mappers 0-1, partitions 130-131
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Start fetching local blocks: 
13 Jul 2022 14:15:16,112 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,113 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,113 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,113 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Task 764 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6895d602
13 Jul 2022 14:15:16,113 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,113 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Task 764 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6895d602
13 Jul 2022 14:15:16,113 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Writing shuffle index file for mapId 764 with length 1
13 Jul 2022 14:15:16,114 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Shuffle index for mapId 764: [0]
13 Jul 2022 14:15:16,114 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - Finished task 130.0 in stage 9.0 (TID 764). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,114 Executor task launch worker for task 130.0 in stage 9.0 (TID 764) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,114 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,114 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,114 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,114 dispatcher-event-loop-1 - Starting task 134.0 in stage 9.0 (TID 765) (172.16.133.220, executor driver, partition 134, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,115 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Running task 134.0 in stage 9.0 (TID 765)
13 Jul 2022 14:15:16,115 task-result-getter-0 - Finished task 130.0 in stage 9.0 (TID 764) in 5 ms on 172.16.133.220 (executor driver) (159/200)
13 Jul 2022 14:15:16,115 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,115 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Convert map statuses for shuffle 5, mappers 0-1, partitions 134-135
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Start fetching local blocks: 
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,116 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,117 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,117 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Task 765 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@257107b4
13 Jul 2022 14:15:16,117 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,117 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Task 765 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@257107b4
13 Jul 2022 14:15:16,117 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Writing shuffle index file for mapId 765 with length 1
13 Jul 2022 14:15:16,118 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Shuffle index for mapId 765: [0]
13 Jul 2022 14:15:16,118 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - Finished task 134.0 in stage 9.0 (TID 765). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,118 Executor task launch worker for task 134.0 in stage 9.0 (TID 765) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,118 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,118 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,118 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,118 dispatcher-event-loop-1 - Starting task 135.0 in stage 9.0 (TID 766) (172.16.133.220, executor driver, partition 135, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,118 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Running task 135.0 in stage 9.0 (TID 766)
13 Jul 2022 14:15:16,118 task-result-getter-1 - Finished task 134.0 in stage 9.0 (TID 765) in 4 ms on 172.16.133.220 (executor driver) (160/200)
13 Jul 2022 14:15:16,119 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,119 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Convert map statuses for shuffle 5, mappers 0-1, partitions 135-136
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Start fetching local blocks: 
13 Jul 2022 14:15:16,120 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,121 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,121 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,121 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Task 766 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@bf2c6ed
13 Jul 2022 14:15:16,121 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,122 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Task 766 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@bf2c6ed
13 Jul 2022 14:15:16,122 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Writing shuffle index file for mapId 766 with length 1
13 Jul 2022 14:15:16,122 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Shuffle index for mapId 766: [0]
13 Jul 2022 14:15:16,122 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - Finished task 135.0 in stage 9.0 (TID 766). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,122 Executor task launch worker for task 135.0 in stage 9.0 (TID 766) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,122 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,122 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,122 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,122 dispatcher-event-loop-1 - Starting task 136.0 in stage 9.0 (TID 767) (172.16.133.220, executor driver, partition 136, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,123 task-result-getter-2 - Finished task 135.0 in stage 9.0 (TID 766) in 5 ms on 172.16.133.220 (executor driver) (161/200)
13 Jul 2022 14:15:16,123 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Running task 136.0 in stage 9.0 (TID 767)
13 Jul 2022 14:15:16,123 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,123 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Convert map statuses for shuffle 5, mappers 0-1, partitions 136-137
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Start fetching local blocks: 
13 Jul 2022 14:15:16,125 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,126 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,127 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,127 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Task 767 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5ad8472e
13 Jul 2022 14:15:16,128 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,128 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Task 767 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5ad8472e
13 Jul 2022 14:15:16,128 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Writing shuffle index file for mapId 767 with length 1
13 Jul 2022 14:15:16,128 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Shuffle index for mapId 767: [0]
13 Jul 2022 14:15:16,128 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - Finished task 136.0 in stage 9.0 (TID 767). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,129 Executor task launch worker for task 136.0 in stage 9.0 (TID 767) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,129 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,129 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,129 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,129 dispatcher-event-loop-1 - Starting task 138.0 in stage 9.0 (TID 768) (172.16.133.220, executor driver, partition 138, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,129 task-result-getter-3 - Finished task 136.0 in stage 9.0 (TID 767) in 7 ms on 172.16.133.220 (executor driver) (162/200)
13 Jul 2022 14:15:16,129 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Running task 138.0 in stage 9.0 (TID 768)
13 Jul 2022 14:15:16,129 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,129 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Convert map statuses for shuffle 5, mappers 0-1, partitions 138-139
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Start fetching local blocks: 
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,131 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,132 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,132 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Task 768 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@48364d9d
13 Jul 2022 14:15:16,132 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,132 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Task 768 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@48364d9d
13 Jul 2022 14:15:16,132 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Writing shuffle index file for mapId 768 with length 1
13 Jul 2022 14:15:16,133 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Shuffle index for mapId 768: [0]
13 Jul 2022 14:15:16,133 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - Finished task 138.0 in stage 9.0 (TID 768). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,133 Executor task launch worker for task 138.0 in stage 9.0 (TID 768) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,133 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,133 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,133 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,133 dispatcher-event-loop-1 - Starting task 143.0 in stage 9.0 (TID 769) (172.16.133.220, executor driver, partition 143, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,133 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Running task 143.0 in stage 9.0 (TID 769)
13 Jul 2022 14:15:16,133 task-result-getter-0 - Finished task 138.0 in stage 9.0 (TID 768) in 4 ms on 172.16.133.220 (executor driver) (163/200)
13 Jul 2022 14:15:16,134 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,134 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Convert map statuses for shuffle 5, mappers 0-1, partitions 143-144
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Start fetching local blocks: 
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,136 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,137 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,137 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Task 769 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@773abcc2
13 Jul 2022 14:15:16,137 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,137 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Task 769 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@773abcc2
13 Jul 2022 14:15:16,137 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Writing shuffle index file for mapId 769 with length 1
13 Jul 2022 14:15:16,138 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Shuffle index for mapId 769: [0]
13 Jul 2022 14:15:16,138 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - Finished task 143.0 in stage 9.0 (TID 769). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,138 Executor task launch worker for task 143.0 in stage 9.0 (TID 769) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,138 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,138 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,138 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,138 dispatcher-event-loop-1 - Starting task 144.0 in stage 9.0 (TID 770) (172.16.133.220, executor driver, partition 144, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,139 task-result-getter-1 - Finished task 143.0 in stage 9.0 (TID 769) in 6 ms on 172.16.133.220 (executor driver) (164/200)
13 Jul 2022 14:15:16,139 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Running task 144.0 in stage 9.0 (TID 770)
13 Jul 2022 14:15:16,139 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,139 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,140 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,140 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Convert map statuses for shuffle 5, mappers 0-1, partitions 144-145
13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Start fetching local blocks: 
13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,141 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Task 770 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@74bc74e1
13 Jul 2022 14:15:16,142 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,142 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Task 770 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@74bc74e1
13 Jul 2022 14:15:16,142 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Writing shuffle index file for mapId 770 with length 1
13 Jul 2022 14:15:16,142 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Shuffle index for mapId 770: [0]
13 Jul 2022 14:15:16,143 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - Finished task 144.0 in stage 9.0 (TID 770). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,143 Executor task launch worker for task 144.0 in stage 9.0 (TID 770) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,143 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,143 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,143 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,143 dispatcher-event-loop-1 - Starting task 147.0 in stage 9.0 (TID 771) (172.16.133.220, executor driver, partition 147, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,143 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Running task 147.0 in stage 9.0 (TID 771)
13 Jul 2022 14:15:16,143 task-result-getter-2 - Finished task 144.0 in stage 9.0 (TID 770) in 5 ms on 172.16.133.220 (executor driver) (165/200)
13 Jul 2022 14:15:16,143 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,143 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Convert map statuses for shuffle 5, mappers 0-1, partitions 147-148
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Start fetching local blocks: 
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,145 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,146 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,146 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Task 771 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@702f44da
13 Jul 2022 14:15:16,147 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,147 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Task 771 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@702f44da
13 Jul 2022 14:15:16,147 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Writing shuffle index file for mapId 771 with length 1
13 Jul 2022 14:15:16,147 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Shuffle index for mapId 771: [0]
13 Jul 2022 14:15:16,147 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - Finished task 147.0 in stage 9.0 (TID 771). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,147 Executor task launch worker for task 147.0 in stage 9.0 (TID 771) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,147 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,148 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,148 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,148 dispatcher-event-loop-1 - Starting task 150.0 in stage 9.0 (TID 772) (172.16.133.220, executor driver, partition 150, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,156 task-result-getter-3 - Finished task 147.0 in stage 9.0 (TID 771) in 13 ms on 172.16.133.220 (executor driver) (166/200)
13 Jul 2022 14:15:16,156 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Running task 150.0 in stage 9.0 (TID 772)
13 Jul 2022 14:15:16,156 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,156 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,156 Spark Context Cleaner - Got cleaning task CleanBroadcast(11)
13 Jul 2022 14:15:16,156 Spark Context Cleaner - Cleaning broadcast 11
13 Jul 2022 14:15:16,156 Spark Context Cleaner - Unpersisting TorrentBroadcast 11
13 Jul 2022 14:15:16,157 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,157 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Convert map statuses for shuffle 5, mappers 0-1, partitions 150-151
13 Jul 2022 14:15:16,157 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,158 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,158 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,158 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Start fetching local blocks: 
13 Jul 2022 14:15:16,158 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,158 block-manager-storage-async-thread-pool-30 - removing broadcast 11
13 Jul 2022 14:15:16,158 block-manager-storage-async-thread-pool-30 - Removing broadcast 11
13 Jul 2022 14:15:16,158 block-manager-storage-async-thread-pool-30 - Removing block broadcast_11
13 Jul 2022 14:15:16,158 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,158 block-manager-storage-async-thread-pool-30 - Block broadcast_11 of size 34112 dropped from memory (free 955808930)
13 Jul 2022 14:15:16,158 block-manager-storage-async-thread-pool-30 - Removing block broadcast_11_piece0
13 Jul 2022 14:15:16,159 block-manager-storage-async-thread-pool-30 - Block broadcast_11_piece0 of size 14973 dropped from memory (free 955823903)
13 Jul 2022 14:15:16,159 dispatcher-BlockManagerMaster - Updating block info on master broadcast_11_piece0 for BlockManagerId(driver, 172.16.133.220, 53286, None)
13 Jul 2022 14:15:16,159 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,159 dispatcher-BlockManagerMaster - Removed broadcast_11_piece0 on 172.16.133.220:53286 in memory (size: 14.6 KiB, free: 912.2 MiB)
13 Jul 2022 14:15:16,159 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Task 772 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2ff20870
13 Jul 2022 14:15:16,159 block-manager-storage-async-thread-pool-30 - Updated info of block broadcast_11_piece0
13 Jul 2022 14:15:16,159 block-manager-storage-async-thread-pool-30 - Told master about block broadcast_11_piece0
13 Jul 2022 14:15:16,159 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,159 block-manager-storage-async-thread-pool-32 - Done removing broadcast 11, response is 0
13 Jul 2022 14:15:16,160 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Task 772 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2ff20870
13 Jul 2022 14:15:16,160 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Writing shuffle index file for mapId 772 with length 1
13 Jul 2022 14:15:16,160 block-manager-storage-async-thread-pool-32 - Sent response: 0 to 172.16.133.220:53285
13 Jul 2022 14:15:16,160 Spark Context Cleaner - Cleaned broadcast 11
13 Jul 2022 14:15:16,160 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Shuffle index for mapId 772: [0]
13 Jul 2022 14:15:16,160 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - Finished task 150.0 in stage 9.0 (TID 772). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,160 Executor task launch worker for task 150.0 in stage 9.0 (TID 772) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,160 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,160 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,160 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,161 dispatcher-event-loop-1 - Starting task 151.0 in stage 9.0 (TID 773) (172.16.133.220, executor driver, partition 151, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,161 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Running task 151.0 in stage 9.0 (TID 773)
13 Jul 2022 14:15:16,161 task-result-getter-0 - Finished task 150.0 in stage 9.0 (TID 772) in 13 ms on 172.16.133.220 (executor driver) (167/200)
13 Jul 2022 14:15:16,161 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,161 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Convert map statuses for shuffle 5, mappers 0-1, partitions 151-152
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Start fetching local blocks: 
13 Jul 2022 14:15:16,162 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,163 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,163 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,163 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Task 773 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@4f1e0ba5
13 Jul 2022 14:15:16,163 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,163 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Task 773 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@4f1e0ba5
13 Jul 2022 14:15:16,163 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Writing shuffle index file for mapId 773 with length 1
13 Jul 2022 14:15:16,164 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Shuffle index for mapId 773: [0]
13 Jul 2022 14:15:16,164 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - Finished task 151.0 in stage 9.0 (TID 773). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,164 Executor task launch worker for task 151.0 in stage 9.0 (TID 773) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,164 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,164 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,164 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,164 dispatcher-event-loop-1 - Starting task 152.0 in stage 9.0 (TID 774) (172.16.133.220, executor driver, partition 152, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,164 task-result-getter-1 - Finished task 151.0 in stage 9.0 (TID 773) in 3 ms on 172.16.133.220 (executor driver) (168/200)
13 Jul 2022 14:15:16,164 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Running task 152.0 in stage 9.0 (TID 774)
13 Jul 2022 14:15:16,165 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,165 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Convert map statuses for shuffle 5, mappers 0-1, partitions 152-153
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Start fetching local blocks: 
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,166 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,167 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,167 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Task 774 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@21215cd6
13 Jul 2022 14:15:16,167 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,167 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Task 774 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@21215cd6
13 Jul 2022 14:15:16,167 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Writing shuffle index file for mapId 774 with length 1
13 Jul 2022 14:15:16,168 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Shuffle index for mapId 774: [0]
13 Jul 2022 14:15:16,168 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - Finished task 152.0 in stage 9.0 (TID 774). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,168 Executor task launch worker for task 152.0 in stage 9.0 (TID 774) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,168 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,168 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,168 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,168 dispatcher-event-loop-1 - Starting task 154.0 in stage 9.0 (TID 775) (172.16.133.220, executor driver, partition 154, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,168 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Running task 154.0 in stage 9.0 (TID 775)
13 Jul 2022 14:15:16,168 task-result-getter-2 - Finished task 152.0 in stage 9.0 (TID 774) in 4 ms on 172.16.133.220 (executor driver) (169/200)
13 Jul 2022 14:15:16,168 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,168 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,169 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,169 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Convert map statuses for shuffle 5, mappers 0-1, partitions 154-155
13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Start fetching local blocks: 
13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,170 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Task 775 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2ae09a5e
13 Jul 2022 14:15:16,171 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,171 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Task 775 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2ae09a5e
13 Jul 2022 14:15:16,171 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Writing shuffle index file for mapId 775 with length 1
13 Jul 2022 14:15:16,171 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Shuffle index for mapId 775: [0]
13 Jul 2022 14:15:16,171 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - Finished task 154.0 in stage 9.0 (TID 775). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,171 Executor task launch worker for task 154.0 in stage 9.0 (TID 775) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,172 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,172 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,172 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,172 dispatcher-event-loop-1 - Starting task 155.0 in stage 9.0 (TID 776) (172.16.133.220, executor driver, partition 155, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,172 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Running task 155.0 in stage 9.0 (TID 776)
13 Jul 2022 14:15:16,172 task-result-getter-3 - Finished task 154.0 in stage 9.0 (TID 775) in 4 ms on 172.16.133.220 (executor driver) (170/200)
13 Jul 2022 14:15:16,172 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,172 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Convert map statuses for shuffle 5, mappers 0-1, partitions 155-156
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Start fetching local blocks: 
13 Jul 2022 14:15:16,173 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,174 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,174 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,174 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Task 776 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3bfddad7
13 Jul 2022 14:15:16,174 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,175 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Task 776 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3bfddad7
13 Jul 2022 14:15:16,175 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Writing shuffle index file for mapId 776 with length 1
13 Jul 2022 14:15:16,175 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Shuffle index for mapId 776: [0]
13 Jul 2022 14:15:16,175 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - Finished task 155.0 in stage 9.0 (TID 776). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,175 Executor task launch worker for task 155.0 in stage 9.0 (TID 776) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,175 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,175 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,175 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,175 dispatcher-event-loop-1 - Starting task 157.0 in stage 9.0 (TID 777) (172.16.133.220, executor driver, partition 157, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,176 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Running task 157.0 in stage 9.0 (TID 777)
13 Jul 2022 14:15:16,176 task-result-getter-0 - Finished task 155.0 in stage 9.0 (TID 776) in 4 ms on 172.16.133.220 (executor driver) (171/200)
13 Jul 2022 14:15:16,176 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,176 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Convert map statuses for shuffle 5, mappers 0-1, partitions 157-158
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Start fetching local blocks: 
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,177 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,178 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,178 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Task 777 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@c8d0c78
13 Jul 2022 14:15:16,178 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,178 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Task 777 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@c8d0c78
13 Jul 2022 14:15:16,178 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Writing shuffle index file for mapId 777 with length 1
13 Jul 2022 14:15:16,179 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Shuffle index for mapId 777: [0]
13 Jul 2022 14:15:16,179 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - Finished task 157.0 in stage 9.0 (TID 777). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,179 Executor task launch worker for task 157.0 in stage 9.0 (TID 777) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,179 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,179 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,179 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,179 dispatcher-event-loop-1 - Starting task 158.0 in stage 9.0 (TID 778) (172.16.133.220, executor driver, partition 158, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,179 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Running task 158.0 in stage 9.0 (TID 778)
13 Jul 2022 14:15:16,179 task-result-getter-1 - Finished task 157.0 in stage 9.0 (TID 777) in 4 ms on 172.16.133.220 (executor driver) (172/200)
13 Jul 2022 14:15:16,179 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,179 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,180 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Convert map statuses for shuffle 5, mappers 0-1, partitions 158-159
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Start fetching local blocks: 
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,181 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Task 778 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2b590359
13 Jul 2022 14:15:16,182 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,182 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Task 778 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2b590359
13 Jul 2022 14:15:16,182 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Writing shuffle index file for mapId 778 with length 1
13 Jul 2022 14:15:16,182 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Shuffle index for mapId 778: [0]
13 Jul 2022 14:15:16,183 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - Finished task 158.0 in stage 9.0 (TID 778). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,183 Executor task launch worker for task 158.0 in stage 9.0 (TID 778) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,183 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,183 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,183 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,183 dispatcher-event-loop-1 - Starting task 159.0 in stage 9.0 (TID 779) (172.16.133.220, executor driver, partition 159, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,183 task-result-getter-2 - Finished task 158.0 in stage 9.0 (TID 778) in 4 ms on 172.16.133.220 (executor driver) (173/200)
13 Jul 2022 14:15:16,183 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Running task 159.0 in stage 9.0 (TID 779)
13 Jul 2022 14:15:16,183 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,183 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Convert map statuses for shuffle 5, mappers 0-1, partitions 159-160
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Start fetching local blocks: 
13 Jul 2022 14:15:16,184 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,185 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,185 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,185 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Task 779 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@2e85be45
13 Jul 2022 14:15:16,186 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,186 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Task 779 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@2e85be45
13 Jul 2022 14:15:16,186 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Writing shuffle index file for mapId 779 with length 1
13 Jul 2022 14:15:16,186 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Shuffle index for mapId 779: [0]
13 Jul 2022 14:15:16,186 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - Finished task 159.0 in stage 9.0 (TID 779). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,186 Executor task launch worker for task 159.0 in stage 9.0 (TID 779) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,186 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,186 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,186 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,186 dispatcher-event-loop-1 - Starting task 161.0 in stage 9.0 (TID 780) (172.16.133.220, executor driver, partition 161, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,187 task-result-getter-3 - Finished task 159.0 in stage 9.0 (TID 779) in 4 ms on 172.16.133.220 (executor driver) (174/200)
13 Jul 2022 14:15:16,187 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Running task 161.0 in stage 9.0 (TID 780)
13 Jul 2022 14:15:16,187 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,187 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Convert map statuses for shuffle 5, mappers 0-1, partitions 161-162
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Start fetching local blocks: 
13 Jul 2022 14:15:16,188 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,189 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,189 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,189 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Task 780 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7b7b4982
13 Jul 2022 14:15:16,189 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,189 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Task 780 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7b7b4982
13 Jul 2022 14:15:16,189 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Writing shuffle index file for mapId 780 with length 1
13 Jul 2022 14:15:16,190 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Shuffle index for mapId 780: [0]
13 Jul 2022 14:15:16,190 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - Finished task 161.0 in stage 9.0 (TID 780). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,190 Executor task launch worker for task 161.0 in stage 9.0 (TID 780) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,190 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,190 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,190 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,190 dispatcher-event-loop-1 - Starting task 164.0 in stage 9.0 (TID 781) (172.16.133.220, executor driver, partition 164, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,190 task-result-getter-0 - Finished task 161.0 in stage 9.0 (TID 780) in 4 ms on 172.16.133.220 (executor driver) (175/200)
13 Jul 2022 14:15:16,190 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Running task 164.0 in stage 9.0 (TID 781)
13 Jul 2022 14:15:16,190 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,191 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Convert map statuses for shuffle 5, mappers 0-1, partitions 164-165
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Start fetching local blocks: 
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,192 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,193 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,193 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Task 781 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@79fce936
13 Jul 2022 14:15:16,193 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,193 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Task 781 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@79fce936
13 Jul 2022 14:15:16,193 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Writing shuffle index file for mapId 781 with length 1
13 Jul 2022 14:15:16,194 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Shuffle index for mapId 781: [0]
13 Jul 2022 14:15:16,194 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - Finished task 164.0 in stage 9.0 (TID 781). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,194 Executor task launch worker for task 164.0 in stage 9.0 (TID 781) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,194 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,194 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,194 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,194 dispatcher-event-loop-1 - Starting task 166.0 in stage 9.0 (TID 782) (172.16.133.220, executor driver, partition 166, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,194 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Running task 166.0 in stage 9.0 (TID 782)
13 Jul 2022 14:15:16,194 task-result-getter-1 - Finished task 164.0 in stage 9.0 (TID 781) in 4 ms on 172.16.133.220 (executor driver) (176/200)
13 Jul 2022 14:15:16,194 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,194 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,195 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,195 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Convert map statuses for shuffle 5, mappers 0-1, partitions 166-167
13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Start fetching local blocks: 
13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,196 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Task 782 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3287e480
13 Jul 2022 14:15:16,197 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,197 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Task 782 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3287e480
13 Jul 2022 14:15:16,197 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Writing shuffle index file for mapId 782 with length 1
13 Jul 2022 14:15:16,197 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Shuffle index for mapId 782: [0]
13 Jul 2022 14:15:16,197 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - Finished task 166.0 in stage 9.0 (TID 782). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,197 Executor task launch worker for task 166.0 in stage 9.0 (TID 782) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,198 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,198 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,198 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,198 dispatcher-event-loop-1 - Starting task 167.0 in stage 9.0 (TID 783) (172.16.133.220, executor driver, partition 167, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,198 task-result-getter-2 - Finished task 166.0 in stage 9.0 (TID 782) in 4 ms on 172.16.133.220 (executor driver) (177/200)
13 Jul 2022 14:15:16,198 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Running task 167.0 in stage 9.0 (TID 783)
13 Jul 2022 14:15:16,198 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,198 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Convert map statuses for shuffle 5, mappers 0-1, partitions 167-168
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Start fetching local blocks: 
13 Jul 2022 14:15:16,199 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,200 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,200 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,200 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Task 783 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@41d6a20b
13 Jul 2022 14:15:16,200 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,200 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Task 783 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@41d6a20b
13 Jul 2022 14:15:16,200 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Writing shuffle index file for mapId 783 with length 1
13 Jul 2022 14:15:16,201 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Shuffle index for mapId 783: [0]
13 Jul 2022 14:15:16,201 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - Finished task 167.0 in stage 9.0 (TID 783). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,201 Executor task launch worker for task 167.0 in stage 9.0 (TID 783) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,201 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,201 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,201 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,201 dispatcher-event-loop-1 - Starting task 168.0 in stage 9.0 (TID 784) (172.16.133.220, executor driver, partition 168, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,201 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Running task 168.0 in stage 9.0 (TID 784)
13 Jul 2022 14:15:16,201 task-result-getter-3 - Finished task 167.0 in stage 9.0 (TID 783) in 3 ms on 172.16.133.220 (executor driver) (178/200)
13 Jul 2022 14:15:16,202 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,202 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,203 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,203 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Convert map statuses for shuffle 5, mappers 0-1, partitions 168-169
13 Jul 2022 14:15:16,203 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,203 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,203 Executor task launch worker for task 168.0 in stage 9.0 (TID 784) - Started 0 remote fetches in 0 ms
