13 Jul 2022 14:15:15,991 Executor task launch worker for task 60.0 in stage 9.0 (TID 734) - Task 734 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3d79266
13 Jul 2022 14:15:15,991 Executor task launch worker for task 60.0 in stage 9.0 (TID 734) - Writing shuffle index file for mapId 734 with length 1
13 Jul 2022 14:15:15,991 Executor task launch worker for task 60.0 in stage 9.0 (TID 734) - Shuffle index for mapId 734: [0]
13 Jul 2022 14:15:15,992 Executor task launch worker for task 60.0 in stage 9.0 (TID 734) - Finished task 60.0 in stage 9.0 (TID 734). 3958 bytes result sent to driver
13 Jul 2022 14:15:15,992 Executor task launch worker for task 60.0 in stage 9.0 (TID 734) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:15,992 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:15,992 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:15,992 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:15,992 dispatcher-event-loop-1 - Starting task 63.0 in stage 9.0 (TID 735) (172.16.133.220, executor driver, partition 63, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:15,992 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Running task 63.0 in stage 9.0 (TID 735)
13 Jul 2022 14:15:15,992 task-result-getter-2 - Finished task 60.0 in stage 9.0 (TID 734) in 5 ms on 172.16.133.220 (executor driver) (129/200)
13 Jul 2022 14:15:15,992 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:15,992 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:15,993 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:15,993 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Convert map statuses for shuffle 5, mappers 0-1, partitions 63-64
13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Start fetching local blocks: 
13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Got local blocks in 0 ms
13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:15,994 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Task 735 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@262e348c
13 Jul 2022 14:15:15,995 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:15,995 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Task 735 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@262e348c
13 Jul 2022 14:15:15,995 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Writing shuffle index file for mapId 735 with length 1
13 Jul 2022 14:15:15,995 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Shuffle index for mapId 735: [0]
13 Jul 2022 14:15:15,996 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - Finished task 63.0 in stage 9.0 (TID 735). 3958 bytes result sent to driver
13 Jul 2022 14:15:15,996 Executor task launch worker for task 63.0 in stage 9.0 (TID 735) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:15,996 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:15,996 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:15,996 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:15,996 dispatcher-event-loop-1 - Starting task 67.0 in stage 9.0 (TID 736) (172.16.133.220, executor driver, partition 67, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:15,996 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Running task 67.0 in stage 9.0 (TID 736)
13 Jul 2022 14:15:15,996 task-result-getter-3 - Finished task 63.0 in stage 9.0 (TID 735) in 4 ms on 172.16.133.220 (executor driver) (130/200)
13 Jul 2022 14:15:15,996 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:15,996 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Convert map statuses for shuffle 5, mappers 0-1, partitions 67-68
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Start fetching local blocks: 
13 Jul 2022 14:15:15,997 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Got local blocks in 0 ms
13 Jul 2022 14:15:15,998 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:15,998 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:15,998 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Task 736 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3d0cb9fc
13 Jul 2022 14:15:15,999 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:15,999 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Task 736 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3d0cb9fc
13 Jul 2022 14:15:15,999 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Writing shuffle index file for mapId 736 with length 1
13 Jul 2022 14:15:15,999 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Shuffle index for mapId 736: [0]
13 Jul 2022 14:15:15,999 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - Finished task 67.0 in stage 9.0 (TID 736). 3958 bytes result sent to driver
13 Jul 2022 14:15:15,999 Executor task launch worker for task 67.0 in stage 9.0 (TID 736) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,000 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,000 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,000 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,000 dispatcher-event-loop-1 - Starting task 68.0 in stage 9.0 (TID 737) (172.16.133.220, executor driver, partition 68, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,000 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Running task 68.0 in stage 9.0 (TID 737)
13 Jul 2022 14:15:16,000 task-result-getter-0 - Finished task 67.0 in stage 9.0 (TID 736) in 4 ms on 172.16.133.220 (executor driver) (131/200)
13 Jul 2022 14:15:16,000 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,000 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Convert map statuses for shuffle 5, mappers 0-1, partitions 68-69
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Start fetching local blocks: 
13 Jul 2022 14:15:16,001 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,002 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,002 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,002 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Task 737 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@22f9b8e7
13 Jul 2022 14:15:16,002 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,002 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Task 737 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@22f9b8e7
13 Jul 2022 14:15:16,002 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Writing shuffle index file for mapId 737 with length 1
13 Jul 2022 14:15:16,003 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Shuffle index for mapId 737: [0]
13 Jul 2022 14:15:16,003 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - Finished task 68.0 in stage 9.0 (TID 737). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,003 Executor task launch worker for task 68.0 in stage 9.0 (TID 737) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,003 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,003 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,003 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,003 dispatcher-event-loop-1 - Starting task 69.0 in stage 9.0 (TID 738) (172.16.133.220, executor driver, partition 69, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,003 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Running task 69.0 in stage 9.0 (TID 738)
13 Jul 2022 14:15:16,003 task-result-getter-1 - Finished task 68.0 in stage 9.0 (TID 737) in 3 ms on 172.16.133.220 (executor driver) (132/200)
13 Jul 2022 14:15:16,003 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,004 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Convert map statuses for shuffle 5, mappers 0-1, partitions 69-70
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Start fetching local blocks: 
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,005 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,006 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,006 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Task 738 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@512603cf
13 Jul 2022 14:15:16,006 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,006 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Task 738 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@512603cf
13 Jul 2022 14:15:16,006 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Writing shuffle index file for mapId 738 with length 1
13 Jul 2022 14:15:16,007 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Shuffle index for mapId 738: [0]
13 Jul 2022 14:15:16,007 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - Finished task 69.0 in stage 9.0 (TID 738). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,007 Executor task launch worker for task 69.0 in stage 9.0 (TID 738) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,007 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,007 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,007 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,007 dispatcher-event-loop-1 - Starting task 71.0 in stage 9.0 (TID 739) (172.16.133.220, executor driver, partition 71, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,007 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Running task 71.0 in stage 9.0 (TID 739)
13 Jul 2022 14:15:16,007 task-result-getter-2 - Finished task 69.0 in stage 9.0 (TID 738) in 4 ms on 172.16.133.220 (executor driver) (133/200)
13 Jul 2022 14:15:16,007 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,007 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,008 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,008 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Convert map statuses for shuffle 5, mappers 0-1, partitions 71-72
13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Start fetching local blocks: 
13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,009 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Task 739 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@291933be
13 Jul 2022 14:15:16,010 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,010 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Task 739 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@291933be
13 Jul 2022 14:15:16,010 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Writing shuffle index file for mapId 739 with length 1
13 Jul 2022 14:15:16,010 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Shuffle index for mapId 739: [0]
13 Jul 2022 14:15:16,011 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - Finished task 71.0 in stage 9.0 (TID 739). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,011 Executor task launch worker for task 71.0 in stage 9.0 (TID 739) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,011 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,011 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,011 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,011 dispatcher-event-loop-1 - Starting task 72.0 in stage 9.0 (TID 740) (172.16.133.220, executor driver, partition 72, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,011 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Running task 72.0 in stage 9.0 (TID 740)
13 Jul 2022 14:15:16,011 task-result-getter-3 - Finished task 71.0 in stage 9.0 (TID 739) in 4 ms on 172.16.133.220 (executor driver) (134/200)
13 Jul 2022 14:15:16,011 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,011 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Convert map statuses for shuffle 5, mappers 0-1, partitions 72-73
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Start fetching local blocks: 
13 Jul 2022 14:15:16,012 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,013 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,013 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,013 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Task 740 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3e20597d
13 Jul 2022 14:15:16,014 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,014 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Task 740 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@3e20597d
13 Jul 2022 14:15:16,014 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Writing shuffle index file for mapId 740 with length 1
13 Jul 2022 14:15:16,014 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Shuffle index for mapId 740: [0]
13 Jul 2022 14:15:16,014 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - Finished task 72.0 in stage 9.0 (TID 740). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,014 Executor task launch worker for task 72.0 in stage 9.0 (TID 740) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,014 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,014 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,015 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,015 dispatcher-event-loop-1 - Starting task 74.0 in stage 9.0 (TID 741) (172.16.133.220, executor driver, partition 74, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,015 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Running task 74.0 in stage 9.0 (TID 741)
13 Jul 2022 14:15:16,015 task-result-getter-0 - Finished task 72.0 in stage 9.0 (TID 740) in 4 ms on 172.16.133.220 (executor driver) (135/200)
13 Jul 2022 14:15:16,015 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,015 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Convert map statuses for shuffle 5, mappers 0-1, partitions 74-75
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Start fetching local blocks: 
13 Jul 2022 14:15:16,016 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,017 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,017 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,017 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Task 741 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5cd6ed72
13 Jul 2022 14:15:16,017 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,018 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Task 741 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5cd6ed72
13 Jul 2022 14:15:16,018 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Writing shuffle index file for mapId 741 with length 1
13 Jul 2022 14:15:16,018 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Shuffle index for mapId 741: [0]
13 Jul 2022 14:15:16,018 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - Finished task 74.0 in stage 9.0 (TID 741). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,018 Executor task launch worker for task 74.0 in stage 9.0 (TID 741) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,018 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,018 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,018 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,018 dispatcher-event-loop-1 - Starting task 77.0 in stage 9.0 (TID 742) (172.16.133.220, executor driver, partition 77, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,019 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Running task 77.0 in stage 9.0 (TID 742)
13 Jul 2022 14:15:16,019 task-result-getter-1 - Finished task 74.0 in stage 9.0 (TID 741) in 3 ms on 172.16.133.220 (executor driver) (136/200)
13 Jul 2022 14:15:16,019 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,019 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Convert map statuses for shuffle 5, mappers 0-1, partitions 77-78
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Start fetching local blocks: 
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,020 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,021 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,021 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Task 742 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@731fb31a
13 Jul 2022 14:15:16,021 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,021 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Task 742 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@731fb31a
13 Jul 2022 14:15:16,021 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Writing shuffle index file for mapId 742 with length 1
13 Jul 2022 14:15:16,022 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Shuffle index for mapId 742: [0]
13 Jul 2022 14:15:16,022 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - Finished task 77.0 in stage 9.0 (TID 742). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,022 Executor task launch worker for task 77.0 in stage 9.0 (TID 742) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,022 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,022 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,022 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,022 dispatcher-event-loop-1 - Starting task 78.0 in stage 9.0 (TID 743) (172.16.133.220, executor driver, partition 78, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,022 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Running task 78.0 in stage 9.0 (TID 743)
13 Jul 2022 14:15:16,022 task-result-getter-2 - Finished task 77.0 in stage 9.0 (TID 742) in 4 ms on 172.16.133.220 (executor driver) (137/200)
13 Jul 2022 14:15:16,023 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,023 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Convert map statuses for shuffle 5, mappers 0-1, partitions 78-79
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Start fetching local blocks: 
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,024 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,025 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,025 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Task 743 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@42e86cb0
13 Jul 2022 14:15:16,025 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,025 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Task 743 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@42e86cb0
13 Jul 2022 14:15:16,025 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Writing shuffle index file for mapId 743 with length 1
13 Jul 2022 14:15:16,026 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Shuffle index for mapId 743: [0]
13 Jul 2022 14:15:16,026 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - Finished task 78.0 in stage 9.0 (TID 743). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,026 Executor task launch worker for task 78.0 in stage 9.0 (TID 743) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,026 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,026 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,026 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,026 dispatcher-event-loop-1 - Starting task 79.0 in stage 9.0 (TID 744) (172.16.133.220, executor driver, partition 79, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,026 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Running task 79.0 in stage 9.0 (TID 744)
13 Jul 2022 14:15:16,026 task-result-getter-3 - Finished task 78.0 in stage 9.0 (TID 743) in 4 ms on 172.16.133.220 (executor driver) (138/200)
13 Jul 2022 14:15:16,026 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,026 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Convert map statuses for shuffle 5, mappers 0-1, partitions 79-80
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Start fetching local blocks: 
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,028 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,029 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Task 744 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@438332e8
13 Jul 2022 14:15:16,029 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,029 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Task 744 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@438332e8
13 Jul 2022 14:15:16,029 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Writing shuffle index file for mapId 744 with length 1
13 Jul 2022 14:15:16,029 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Shuffle index for mapId 744: [0]
13 Jul 2022 14:15:16,030 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - Finished task 79.0 in stage 9.0 (TID 744). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,030 Executor task launch worker for task 79.0 in stage 9.0 (TID 744) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,030 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,030 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,030 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,030 dispatcher-event-loop-1 - Starting task 83.0 in stage 9.0 (TID 745) (172.16.133.220, executor driver, partition 83, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,030 task-result-getter-0 - Finished task 79.0 in stage 9.0 (TID 744) in 4 ms on 172.16.133.220 (executor driver) (139/200)
13 Jul 2022 14:15:16,030 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Running task 83.0 in stage 9.0 (TID 745)
13 Jul 2022 14:15:16,030 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,030 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Convert map statuses for shuffle 5, mappers 0-1, partitions 83-84
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Start fetching local blocks: 
13 Jul 2022 14:15:16,031 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,032 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,032 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,032 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Task 745 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@f9cffe9
13 Jul 2022 14:15:16,033 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,033 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Task 745 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@f9cffe9
13 Jul 2022 14:15:16,033 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Writing shuffle index file for mapId 745 with length 1
13 Jul 2022 14:15:16,033 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Shuffle index for mapId 745: [0]
13 Jul 2022 14:15:16,034 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - Finished task 83.0 in stage 9.0 (TID 745). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,034 Executor task launch worker for task 83.0 in stage 9.0 (TID 745) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,034 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,034 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,034 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,034 dispatcher-event-loop-1 - Starting task 87.0 in stage 9.0 (TID 746) (172.16.133.220, executor driver, partition 87, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,034 task-result-getter-1 - Finished task 83.0 in stage 9.0 (TID 745) in 4 ms on 172.16.133.220 (executor driver) (140/200)
13 Jul 2022 14:15:16,034 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Running task 87.0 in stage 9.0 (TID 746)
13 Jul 2022 14:15:16,034 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,034 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Convert map statuses for shuffle 5, mappers 0-1, partitions 87-88
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Start fetching local blocks: 
13 Jul 2022 14:15:16,035 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,036 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,036 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,036 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Task 746 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@35034d0e
13 Jul 2022 14:15:16,037 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,037 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Task 746 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@35034d0e
13 Jul 2022 14:15:16,037 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Writing shuffle index file for mapId 746 with length 1
13 Jul 2022 14:15:16,037 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Shuffle index for mapId 746: [0]
13 Jul 2022 14:15:16,037 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - Finished task 87.0 in stage 9.0 (TID 746). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,037 Executor task launch worker for task 87.0 in stage 9.0 (TID 746) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,037 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,038 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,038 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,038 dispatcher-event-loop-1 - Starting task 89.0 in stage 9.0 (TID 747) (172.16.133.220, executor driver, partition 89, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,038 task-result-getter-2 - Finished task 87.0 in stage 9.0 (TID 746) in 4 ms on 172.16.133.220 (executor driver) (141/200)
13 Jul 2022 14:15:16,038 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Running task 89.0 in stage 9.0 (TID 747)
13 Jul 2022 14:15:16,038 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,038 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Convert map statuses for shuffle 5, mappers 0-1, partitions 89-90
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Start fetching local blocks: 
13 Jul 2022 14:15:16,039 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,040 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,040 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,040 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Task 747 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6e0aedbe
13 Jul 2022 14:15:16,041 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,041 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Task 747 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6e0aedbe
13 Jul 2022 14:15:16,041 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Writing shuffle index file for mapId 747 with length 1
13 Jul 2022 14:15:16,041 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Shuffle index for mapId 747: [0]
13 Jul 2022 14:15:16,041 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - Finished task 89.0 in stage 9.0 (TID 747). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,041 Executor task launch worker for task 89.0 in stage 9.0 (TID 747) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,041 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,041 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,041 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,042 dispatcher-event-loop-1 - Starting task 92.0 in stage 9.0 (TID 748) (172.16.133.220, executor driver, partition 92, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,042 task-result-getter-3 - Finished task 89.0 in stage 9.0 (TID 747) in 4 ms on 172.16.133.220 (executor driver) (142/200)
13 Jul 2022 14:15:16,042 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Running task 92.0 in stage 9.0 (TID 748)
13 Jul 2022 14:15:16,042 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,042 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Convert map statuses for shuffle 5, mappers 0-1, partitions 92-93
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Start fetching local blocks: 
13 Jul 2022 14:15:16,043 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,044 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,044 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,044 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Task 748 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@7be2c2ab
13 Jul 2022 14:15:16,045 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,045 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Task 748 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@7be2c2ab
13 Jul 2022 14:15:16,045 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Writing shuffle index file for mapId 748 with length 1
13 Jul 2022 14:15:16,045 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Shuffle index for mapId 748: [0]
13 Jul 2022 14:15:16,045 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - Finished task 92.0 in stage 9.0 (TID 748). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,045 Executor task launch worker for task 92.0 in stage 9.0 (TID 748) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,046 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,046 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,046 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,046 dispatcher-event-loop-1 - Starting task 95.0 in stage 9.0 (TID 749) (172.16.133.220, executor driver, partition 95, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,046 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Running task 95.0 in stage 9.0 (TID 749)
13 Jul 2022 14:15:16,046 task-result-getter-0 - Finished task 92.0 in stage 9.0 (TID 748) in 4 ms on 172.16.133.220 (executor driver) (143/200)
13 Jul 2022 14:15:16,046 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,046 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Convert map statuses for shuffle 5, mappers 0-1, partitions 95-96
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Start fetching local blocks: 
13 Jul 2022 14:15:16,047 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,048 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,048 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,048 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Task 749 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@5abd1fe3
13 Jul 2022 14:15:16,049 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,049 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Task 749 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@5abd1fe3
13 Jul 2022 14:15:16,049 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Writing shuffle index file for mapId 749 with length 1
13 Jul 2022 14:15:16,049 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Shuffle index for mapId 749: [0]
13 Jul 2022 14:15:16,049 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - Finished task 95.0 in stage 9.0 (TID 749). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,049 Executor task launch worker for task 95.0 in stage 9.0 (TID 749) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,050 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,050 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,050 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,050 dispatcher-event-loop-1 - Starting task 97.0 in stage 9.0 (TID 750) (172.16.133.220, executor driver, partition 97, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,050 task-result-getter-1 - Finished task 95.0 in stage 9.0 (TID 749) in 4 ms on 172.16.133.220 (executor driver) (144/200)
13 Jul 2022 14:15:16,050 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Running task 97.0 in stage 9.0 (TID 750)
13 Jul 2022 14:15:16,050 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,050 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Convert map statuses for shuffle 5, mappers 0-1, partitions 97-98
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Start fetching local blocks: 
13 Jul 2022 14:15:16,052 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,053 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,053 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,053 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Task 750 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@573eb5bb
13 Jul 2022 14:15:16,054 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,054 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Task 750 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@573eb5bb
13 Jul 2022 14:15:16,054 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Writing shuffle index file for mapId 750 with length 1
13 Jul 2022 14:15:16,054 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Shuffle index for mapId 750: [0]
13 Jul 2022 14:15:16,054 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - Finished task 97.0 in stage 9.0 (TID 750). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,054 Executor task launch worker for task 97.0 in stage 9.0 (TID 750) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,054 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,054 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,055 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,055 dispatcher-event-loop-1 - Starting task 98.0 in stage 9.0 (TID 751) (172.16.133.220, executor driver, partition 98, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,055 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Running task 98.0 in stage 9.0 (TID 751)
13 Jul 2022 14:15:16,055 task-result-getter-2 - Finished task 97.0 in stage 9.0 (TID 750) in 5 ms on 172.16.133.220 (executor driver) (145/200)
13 Jul 2022 14:15:16,055 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,056 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,056 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,056 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Convert map statuses for shuffle 5, mappers 0-1, partitions 98-99
13 Jul 2022 14:15:16,057 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,057 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,057 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,057 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Start fetching local blocks: 
13 Jul 2022 14:15:16,057 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,057 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,058 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,058 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Task 751 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@351dfd0b
13 Jul 2022 14:15:16,058 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,058 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Task 751 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@351dfd0b
13 Jul 2022 14:15:16,058 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Writing shuffle index file for mapId 751 with length 1
13 Jul 2022 14:15:16,058 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Shuffle index for mapId 751: [0]
13 Jul 2022 14:15:16,059 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - Finished task 98.0 in stage 9.0 (TID 751). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,059 Executor task launch worker for task 98.0 in stage 9.0 (TID 751) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,059 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,059 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,059 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,059 dispatcher-event-loop-1 - Starting task 101.0 in stage 9.0 (TID 752) (172.16.133.220, executor driver, partition 101, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,059 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Running task 101.0 in stage 9.0 (TID 752)
13 Jul 2022 14:15:16,059 task-result-getter-3 - Finished task 98.0 in stage 9.0 (TID 751) in 4 ms on 172.16.133.220 (executor driver) (146/200)
13 Jul 2022 14:15:16,059 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,059 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,060 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,060 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Convert map statuses for shuffle 5, mappers 0-1, partitions 101-102
13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Start fetching local blocks: 
13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,061 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,062 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Task 752 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@6649173e
13 Jul 2022 14:15:16,062 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,062 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Task 752 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@6649173e
13 Jul 2022 14:15:16,062 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Writing shuffle index file for mapId 752 with length 1
13 Jul 2022 14:15:16,062 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Shuffle index for mapId 752: [0]
13 Jul 2022 14:15:16,063 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - Finished task 101.0 in stage 9.0 (TID 752). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,063 Executor task launch worker for task 101.0 in stage 9.0 (TID 752) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,063 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,063 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,063 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,063 dispatcher-event-loop-1 - Starting task 107.0 in stage 9.0 (TID 753) (172.16.133.220, executor driver, partition 107, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,063 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Running task 107.0 in stage 9.0 (TID 753)
13 Jul 2022 14:15:16,063 task-result-getter-0 - Finished task 101.0 in stage 9.0 (TID 752) in 4 ms on 172.16.133.220 (executor driver) (147/200)
13 Jul 2022 14:15:16,063 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,063 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,064 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,064 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Convert map statuses for shuffle 5, mappers 0-1, partitions 107-108
13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Start fetching local blocks: 
13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,065 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Task 753 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@146b818f
13 Jul 2022 14:15:16,066 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,066 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Task 753 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@146b818f
13 Jul 2022 14:15:16,066 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Writing shuffle index file for mapId 753 with length 1
13 Jul 2022 14:15:16,066 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Shuffle index for mapId 753: [0]
13 Jul 2022 14:15:16,067 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - Finished task 107.0 in stage 9.0 (TID 753). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,067 Executor task launch worker for task 107.0 in stage 9.0 (TID 753) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,067 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,067 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,067 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,067 dispatcher-event-loop-1 - Starting task 109.0 in stage 9.0 (TID 754) (172.16.133.220, executor driver, partition 109, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,067 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Running task 109.0 in stage 9.0 (TID 754)
13 Jul 2022 14:15:16,067 task-result-getter-1 - Finished task 107.0 in stage 9.0 (TID 753) in 4 ms on 172.16.133.220 (executor driver) (148/200)
13 Jul 2022 14:15:16,067 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,067 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Convert map statuses for shuffle 5, mappers 0-1, partitions 109-110
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Start fetching local blocks: 
13 Jul 2022 14:15:16,069 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,070 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,070 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,070 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Task 754 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@8f4665d
13 Jul 2022 14:15:16,071 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,071 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Task 754 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@8f4665d
13 Jul 2022 14:15:16,071 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Writing shuffle index file for mapId 754 with length 1
13 Jul 2022 14:15:16,071 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Shuffle index for mapId 754: [0]
13 Jul 2022 14:15:16,072 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - Finished task 109.0 in stage 9.0 (TID 754). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,072 Executor task launch worker for task 109.0 in stage 9.0 (TID 754) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,072 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,072 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,072 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,072 dispatcher-event-loop-1 - Starting task 111.0 in stage 9.0 (TID 755) (172.16.133.220, executor driver, partition 111, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,072 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Running task 111.0 in stage 9.0 (TID 755)
13 Jul 2022 14:15:16,072 task-result-getter-2 - Finished task 109.0 in stage 9.0 (TID 754) in 5 ms on 172.16.133.220 (executor driver) (149/200)
13 Jul 2022 14:15:16,072 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,072 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,073 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,073 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Convert map statuses for shuffle 5, mappers 0-1, partitions 111-112
13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Start fetching local blocks: 
13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,074 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Task 755 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@22892a22
13 Jul 2022 14:15:16,075 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,075 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Task 755 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@22892a22
13 Jul 2022 14:15:16,075 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Writing shuffle index file for mapId 755 with length 1
13 Jul 2022 14:15:16,075 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Shuffle index for mapId 755: [0]
13 Jul 2022 14:15:16,075 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - Finished task 111.0 in stage 9.0 (TID 755). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,076 Executor task launch worker for task 111.0 in stage 9.0 (TID 755) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,076 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,076 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,076 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,076 dispatcher-event-loop-1 - Starting task 112.0 in stage 9.0 (TID 756) (172.16.133.220, executor driver, partition 112, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,076 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Running task 112.0 in stage 9.0 (TID 756)
13 Jul 2022 14:15:16,076 task-result-getter-3 - Finished task 111.0 in stage 9.0 (TID 755) in 4 ms on 172.16.133.220 (executor driver) (150/200)
13 Jul 2022 14:15:16,076 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,076 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Convert map statuses for shuffle 5, mappers 0-1, partitions 112-113
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Start fetching local blocks: 
13 Jul 2022 14:15:16,077 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,078 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,078 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,078 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Task 756 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@69cd335c
13 Jul 2022 14:15:16,079 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,079 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Task 756 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@69cd335c
13 Jul 2022 14:15:16,079 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Writing shuffle index file for mapId 756 with length 1
13 Jul 2022 14:15:16,079 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Shuffle index for mapId 756: [0]
13 Jul 2022 14:15:16,079 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - Finished task 112.0 in stage 9.0 (TID 756). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,079 Executor task launch worker for task 112.0 in stage 9.0 (TID 756) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,080 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,080 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,080 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,080 dispatcher-event-loop-1 - Starting task 115.0 in stage 9.0 (TID 757) (172.16.133.220, executor driver, partition 115, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,080 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Running task 115.0 in stage 9.0 (TID 757)
13 Jul 2022 14:15:16,080 task-result-getter-0 - Finished task 112.0 in stage 9.0 (TID 756) in 4 ms on 172.16.133.220 (executor driver) (151/200)
13 Jul 2022 14:15:16,080 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,080 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,081 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,081 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Convert map statuses for shuffle 5, mappers 0-1, partitions 115-116
13 Jul 2022 14:15:16,082 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,082 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,082 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,082 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Start fetching local blocks: 
13 Jul 2022 14:15:16,082 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,082 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,083 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,083 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Task 757 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@f64b62
13 Jul 2022 14:15:16,084 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,084 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Task 757 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@f64b62
13 Jul 2022 14:15:16,084 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Writing shuffle index file for mapId 757 with length 1
13 Jul 2022 14:15:16,084 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Shuffle index for mapId 757: [0]
13 Jul 2022 14:15:16,084 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - Finished task 115.0 in stage 9.0 (TID 757). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,084 Executor task launch worker for task 115.0 in stage 9.0 (TID 757) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,085 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,085 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,085 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,085 dispatcher-event-loop-1 - Starting task 118.0 in stage 9.0 (TID 758) (172.16.133.220, executor driver, partition 118, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,085 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Running task 118.0 in stage 9.0 (TID 758)
13 Jul 2022 14:15:16,085 task-result-getter-1 - Finished task 115.0 in stage 9.0 (TID 757) in 5 ms on 172.16.133.220 (executor driver) (152/200)
13 Jul 2022 14:15:16,085 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,085 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Convert map statuses for shuffle 5, mappers 0-1, partitions 118-119
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Start fetching local blocks: 
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,087 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,088 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,088 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Task 758 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@b23797d
13 Jul 2022 14:15:16,088 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - code for input[0, bigint, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     long value_0 = isNull_0 ?
/* 033 */     -1L : (i.getLong(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */     return (mutableStateArray_0[0].getRow());
/* 040 */   }
/* 041 */
/* 042 */
/* 043 */ }

13 Jul 2022 14:15:16,088 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Task 758 release 256.0 KiB from org.apache.spark.unsafe.map.BytesToBytesMap@b23797d
13 Jul 2022 14:15:16,088 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Writing shuffle index file for mapId 758 with length 1
13 Jul 2022 14:15:16,088 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Shuffle index for mapId 758: [0]
13 Jul 2022 14:15:16,089 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - Finished task 118.0 in stage 9.0 (TID 758). 3958 bytes result sent to driver
13 Jul 2022 14:15:16,089 Executor task launch worker for task 118.0 in stage 9.0 (TID 758) - removing (9, 0) from stageTCMP
13 Jul 2022 14:15:16,089 dispatcher-event-loop-1 - parentName: , name: TaskSet_9.0, runningTasks: 0
13 Jul 2022 14:15:16,089 dispatcher-event-loop-1 - No tasks for locality level NODE_LOCAL, so moving to locality level NO_PREF
13 Jul 2022 14:15:16,089 dispatcher-event-loop-1 - Moving to ANY after waiting for 0ms
13 Jul 2022 14:15:16,089 dispatcher-event-loop-1 - Starting task 119.0 in stage 9.0 (TID 759) (172.16.133.220, executor driver, partition 119, PROCESS_LOCAL, 4442 bytes) taskResourceAssignments Map()
13 Jul 2022 14:15:16,089 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Running task 119.0 in stage 9.0 (TID 759)
13 Jul 2022 14:15:16,089 task-result-getter-2 - Finished task 118.0 in stage 9.0 (TID 758) in 4 ms on 172.16.133.220 (executor driver) (153/200)
13 Jul 2022 14:15:16,089 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - stageTCMP: (9, 0) -> 1
13 Jul 2022 14:15:16,089 dag-scheduler-event-loop - ShuffleMapTask finished on driver
13 Jul 2022 14:15:16,090 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Fetching outputs for shuffle 5
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Convert map statuses for shuffle 5, mappers 0-1, partitions 119-120
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - maxBytesInFlight: 50331648, targetRemoteRequestSize: 10066329, maxBlocksInFlightPerAddress: 2147483647
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) remote blocks
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Started 0 remote fetches in 0 ms
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Start fetching local blocks: 
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Got local blocks in 0 ms
13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - code for 0:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(1, 0);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */
/* 030 */
/* 031 */
/* 032 */     mutableStateArray_0[0].write(0, 0L);
/* 033 */     return (mutableStateArray_0[0].getRow());
/* 034 */   }
/* 035 */
/* 036 */
/* 037 */ }

13 Jul 2022 14:15:16,091 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - code for input[0, string, true],input[1, string, true]:
/* 001 */ public java.lang.Object generate(Object[] references) {
/* 002 */   return new SpecificUnsafeProjection(references);
/* 003 */ }
/* 004 */
/* 005 */ class SpecificUnsafeProjection extends org.apache.spark.sql.catalyst.expressions.UnsafeProjection {
/* 006 */
/* 007 */   private Object[] references;
/* 008 */   private org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[] mutableStateArray_0 = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter[1];
/* 009 */
/* 010 */   public SpecificUnsafeProjection(Object[] references) {
/* 011 */     this.references = references;
/* 012 */     mutableStateArray_0[0] = new org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowWriter(2, 64);
/* 013 */
/* 014 */   }
/* 015 */
/* 016 */   public void initialize(int partitionIndex) {
/* 017 */
/* 018 */   }
/* 019 */
/* 020 */   // Scala.Function1 need this
/* 021 */   public java.lang.Object apply(java.lang.Object row) {
/* 022 */     return apply((InternalRow) row);
/* 023 */   }
/* 024 */
/* 025 */   public UnsafeRow apply(InternalRow i) {
/* 026 */     mutableStateArray_0[0].reset();
/* 027 */
/* 028 */
/* 029 */     mutableStateArray_0[0].zeroOutNullBytes();
/* 030 */
/* 031 */     boolean isNull_0 = i.isNullAt(0);
/* 032 */     UTF8String value_0 = isNull_0 ?
/* 033 */     null : (i.getUTF8String(0));
/* 034 */     if (isNull_0) {
/* 035 */       mutableStateArray_0[0].setNullAt(0);
/* 036 */     } else {
/* 037 */       mutableStateArray_0[0].write(0, value_0);
/* 038 */     }
/* 039 */
/* 040 */     boolean isNull_1 = i.isNullAt(1);
/* 041 */     UTF8String value_1 = isNull_1 ?
/* 042 */     null : (i.getUTF8String(1));
/* 043 */     if (isNull_1) {
/* 044 */       mutableStateArray_0[0].setNullAt(1);
/* 045 */     } else {
/* 046 */       mutableStateArray_0[0].write(1, value_1);
/* 047 */     }
/* 048 */     return (mutableStateArray_0[0].getRow());
/* 049 */   }
/* 050 */
/* 051 */
/* 052 */ }

13 Jul 2022 14:15:16,092 Executor task launch worker for task 119.0 in stage 9.0 (TID 759) - Task 759 acquired 256.0 KiB for org.apache.spark.unsafe.map.BytesToBytesMap@3e252e14
